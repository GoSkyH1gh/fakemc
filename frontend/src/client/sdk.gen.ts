// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from './client';
import type { RootGetData, RootGetResponses, GetProfileV1PlayersMojangUsernameGetData, GetProfileV1PlayersMojangUsernameGetResponses, GetProfileV1PlayersMojangUsernameGetErrors, GetHypixelV1PlayersHypixelUuidGetData, GetHypixelV1PlayersHypixelUuidGetResponses, GetHypixelV1PlayersHypixelUuidGetErrors, GetGuildV1HypixelGuildsIdGetData, GetGuildV1HypixelGuildsIdGetResponses, GetGuildV1HypixelGuildsIdGetErrors, GetStatusV1PlayersStatusUuidGetData, GetStatusV1PlayersStatusUuidGetResponses, GetStatusV1PlayersStatusUuidGetErrors, GetWynncraftV1PlayersWynncraftUuidGetData, GetWynncraftV1PlayersWynncraftUuidGetResponses, GetWynncraftV1PlayersWynncraftUuidGetErrors, GetWynncraftGuildV1WynncraftGuildsPrefixGetData, GetWynncraftGuildV1WynncraftGuildsPrefixGetResponses, GetWynncraftGuildV1WynncraftGuildsPrefixGetErrors, GetWynncraftGuildListV1WynncraftGuildListGetData, GetWynncraftGuildListV1WynncraftGuildListGetResponses, GetDonutV1PlayersDonutsmpUsernameGetData, GetDonutV1PlayersDonutsmpUsernameGetResponses, GetDonutV1PlayersDonutsmpUsernameGetErrors, GetMccIslandV1PlayersMccislandUuidGetData, GetMccIslandV1PlayersMccislandUuidGetResponses, GetMccIslandV1PlayersMccislandUuidGetErrors, GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetData, GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetResponses, GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetErrors, TrackPlayerV1TrackerUuidStatusGetData, TrackPlayerV1TrackerUuidStatusGetResponses, TrackPlayerV1TrackerUuidStatusGetErrors } from './types.gen';
import { client } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Root
 */
export const rootGet = <ThrowOnError extends boolean = false>(options?: Options<RootGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<RootGetResponses, unknown, ThrowOnError>({
        url: '/',
        ...options
    });
};

/**
 * Get Profile
 */
export const getProfileV1PlayersMojangUsernameGet = <ThrowOnError extends boolean = false>(options: Options<GetProfileV1PlayersMojangUsernameGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetProfileV1PlayersMojangUsernameGetResponses, GetProfileV1PlayersMojangUsernameGetErrors, ThrowOnError>({
        url: '/v1/players/mojang/{username}',
        ...options
    });
};

/**
 * Get Hypixel
 */
export const getHypixelV1PlayersHypixelUuidGet = <ThrowOnError extends boolean = false>(options: Options<GetHypixelV1PlayersHypixelUuidGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetHypixelV1PlayersHypixelUuidGetResponses, GetHypixelV1PlayersHypixelUuidGetErrors, ThrowOnError>({
        url: '/v1/players/hypixel/{uuid}',
        ...options
    });
};

/**
 * Get Guild
 */
export const getGuildV1HypixelGuildsIdGet = <ThrowOnError extends boolean = false>(options: Options<GetGuildV1HypixelGuildsIdGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetGuildV1HypixelGuildsIdGetResponses, GetGuildV1HypixelGuildsIdGetErrors, ThrowOnError>({
        url: '/v1/hypixel/guilds/{id}',
        ...options
    });
};

/**
 * Get Status
 */
export const getStatusV1PlayersStatusUuidGet = <ThrowOnError extends boolean = false>(options: Options<GetStatusV1PlayersStatusUuidGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetStatusV1PlayersStatusUuidGetResponses, GetStatusV1PlayersStatusUuidGetErrors, ThrowOnError>({
        url: '/v1/players/status/{uuid}',
        ...options
    });
};

/**
 * Get Wynncraft
 */
export const getWynncraftV1PlayersWynncraftUuidGet = <ThrowOnError extends boolean = false>(options: Options<GetWynncraftV1PlayersWynncraftUuidGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetWynncraftV1PlayersWynncraftUuidGetResponses, GetWynncraftV1PlayersWynncraftUuidGetErrors, ThrowOnError>({
        url: '/v1/players/wynncraft/{uuid}',
        ...options
    });
};

/**
 * Get Wynncraft Guild
 */
export const getWynncraftGuildV1WynncraftGuildsPrefixGet = <ThrowOnError extends boolean = false>(options: Options<GetWynncraftGuildV1WynncraftGuildsPrefixGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetWynncraftGuildV1WynncraftGuildsPrefixGetResponses, GetWynncraftGuildV1WynncraftGuildsPrefixGetErrors, ThrowOnError>({
        url: '/v1/wynncraft/guilds/{prefix}',
        ...options
    });
};

/**
 * Get Wynncraft Guild List
 */
export const getWynncraftGuildListV1WynncraftGuildListGet = <ThrowOnError extends boolean = false>(options?: Options<GetWynncraftGuildListV1WynncraftGuildListGetData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetWynncraftGuildListV1WynncraftGuildListGetResponses, unknown, ThrowOnError>({
        url: '/v1/wynncraft/guild-list',
        ...options
    });
};

/**
 * Get Donut
 */
export const getDonutV1PlayersDonutsmpUsernameGet = <ThrowOnError extends boolean = false>(options: Options<GetDonutV1PlayersDonutsmpUsernameGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetDonutV1PlayersDonutsmpUsernameGetResponses, GetDonutV1PlayersDonutsmpUsernameGetErrors, ThrowOnError>({
        url: '/v1/players/donutsmp/{username}',
        ...options
    });
};

/**
 * Get Mcc Island
 */
export const getMccIslandV1PlayersMccislandUuidGet = <ThrowOnError extends boolean = false>(options: Options<GetMccIslandV1PlayersMccislandUuidGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetMccIslandV1PlayersMccislandUuidGetResponses, GetMccIslandV1PlayersMccislandUuidGetErrors, ThrowOnError>({
        url: '/v1/players/mccisland/{uuid}',
        ...options
    });
};

/**
 * Get Metric
 */
export const getMetricV1MetricsMetricKeyDistributionPlayerUuidGet = <ThrowOnError extends boolean = false>(options: Options<GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetData, ThrowOnError>) => {
    return (options.client ?? client).get<GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetResponses, GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetErrors, ThrowOnError>({
        url: '/v1/metrics/{metric_key}/distribution/{player_uuid}',
        ...options
    });
};

/**
 * Track Player
 */
export const trackPlayerV1TrackerUuidStatusGet = <ThrowOnError extends boolean = false>(options: Options<TrackPlayerV1TrackerUuidStatusGetData, ThrowOnError>) => {
    return (options.client ?? client).get<TrackPlayerV1TrackerUuidStatusGetResponses, TrackPlayerV1TrackerUuidStatusGetErrors, ThrowOnError>({
        url: '/v1/tracker/{uuid}/status',
        ...options
    });
};
