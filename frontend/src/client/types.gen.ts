// This file is auto-generated by @hey-api/openapi-ts

/**
 * BedwarsMode
 */
export type BedwarsMode = {
    /**
     * Games Played
     */
    games_played: number;
    /**
     * Winstreak
     */
    winstreak: number;
    /**
     * Wins
     */
    wins: number;
    /**
     * Losses
     */
    losses: number;
    /**
     * Winn Loss Ratio
     */
    winn_loss_ratio: number;
    /**
     * Kills
     */
    kills: number;
    /**
     * Deaths
     */
    deaths: number;
    /**
     * Kill Death Ratio
     */
    kill_death_ratio: number;
    /**
     * Final Kills
     */
    final_kills: number;
    /**
     * Final Deaths
     */
    final_deaths: number;
    /**
     * Final Kill Death Ratio
     */
    final_kill_death_ratio: number;
    /**
     * Beds Broken
     */
    beds_broken: number;
    /**
     * Beds Lost
     */
    beds_lost: number;
    /**
     * Bed Broken Lost Ratio
     */
    bed_broken_lost_ratio: number;
    /**
     * Items Purchased
     */
    items_purchased: number;
    /**
     * Resources Collected
     */
    resources_collected: number;
    /**
     * Iron Collected
     */
    iron_collected: number;
    /**
     * Gold Collected
     */
    gold_collected: number;
    /**
     * Diamonds Collected
     */
    diamonds_collected: number;
    /**
     * Emeralds Collected
     */
    emeralds_collected: number;
};

/**
 * BedwarsProfile
 */
export type BedwarsProfile = {
    /**
     * Experience
     */
    experience: number;
    /**
     * Level
     */
    level: number;
    /**
     * Tokens
     */
    tokens: number;
    overall_stats: BedwarsMode;
    solo_stats: BedwarsMode;
    duo_stats: BedwarsMode;
    trio_stats: BedwarsMode;
    quad_stats: BedwarsMode;
};

/**
 * CharacterInfo
 */
export type CharacterInfo = {
    /**
     * Character Uuid
     */
    character_uuid: string;
    /**
     * Character Class
     */
    character_class: string;
    /**
     * Reskin
     */
    reskin: string | null;
    /**
     * Level
     */
    level: number;
    /**
     * Playtime
     */
    playtime: number;
    /**
     * Mobs Killed
     */
    mobs_killed: number | null;
    /**
     * Chests Opened
     */
    chests_opened: number | null;
    /**
     * Logins
     */
    logins: number;
    /**
     * Deaths
     */
    deaths: number;
    /**
     * Gamemodes
     */
    gamemodes: Array<string>;
    professions: ProfessionInfo;
    /**
     * Quests Completed
     */
    quests_completed: number;
};

/**
 * DonutPlayerStats
 */
export type DonutPlayerStats = {
    /**
     * Money
     */
    money: number;
    /**
     * Shards
     */
    shards: number;
    /**
     * Kills
     */
    kills: number;
    /**
     * Deaths
     */
    deaths: number;
    /**
     * Playtime Hours
     */
    playtime_hours: number;
    /**
     * Placed Blocks
     */
    placed_blocks: number;
    /**
     * Broken Blocks
     */
    broken_blocks: number;
    /**
     * Mobs Killed
     */
    mobs_killed: number;
    /**
     * Money Spent
     */
    money_spent: number;
    /**
     * Money Earned
     */
    money_earned: number;
    /**
     * Online
     */
    online: boolean;
};

/**
 * ErrorResponse
 */
export type ErrorResponse = {
    /**
     * Detail
     */
    detail: string;
};

/**
 * GuildInfo
 */
export type GuildInfo = {
    /**
     * Name
     */
    name: string;
    /**
     * Prefix
     */
    prefix: string;
    /**
     * Guild Uuid
     */
    guild_uuid: string;
    /**
     * Level
     */
    level: number;
    /**
     * Wars
     */
    wars: number;
    /**
     * Territories
     */
    territories: number;
    /**
     * Created
     */
    created: string;
    /**
     * Member Count
     */
    member_count: number;
    /**
     * Members
     */
    members: Array<GuildMember>;
};

/**
 * GuildMember
 */
export type GuildMember = {
    /**
     * Username
     */
    username: string;
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Online
     */
    online: boolean;
    /**
     * Joined
     */
    joined: string;
    /**
     * Rank
     */
    rank: string;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * HistogramData
 */
export type HistogramData = {
    /**
     * Metric Key
     */
    metric_key: string;
    /**
     * Unit
     */
    unit: string | null;
    /**
     * Higher Is Better
     */
    higher_is_better: boolean;
    /**
     * Player Value
     */
    player_value: number;
    /**
     * Sample Size
     */
    sample_size: number;
    /**
     * Min Value
     */
    min_value: number;
    /**
     * Max Value
     */
    max_value: number;
    /**
     * Buckets
     */
    buckets: Array<number>;
    /**
     * Counts
     */
    counts: Array<number>;
    /**
     * Percentile
     */
    percentile: number;
};

/**
 * HypixelFullData
 */
export type HypixelFullData = {
    player: HypixelPlayer;
    guild: HypixelGuild | null;
};

/**
 * HypixelGuild
 */
export type HypixelGuild = {
    /**
     * Source
     */
    source: string;
    /**
     * Name
     */
    name: string;
    /**
     * Id
     */
    id: string;
    /**
     * Created
     */
    created: string;
    /**
     * Experience
     */
    experience: number;
    /**
     * Tag
     */
    tag: string | null;
    /**
     * Description
     */
    description: string | null;
    /**
     * Publicly Listed
     */
    publicly_listed: boolean;
    /**
     * Members
     */
    members: Array<HypixelGuildMember>;
};

/**
 * HypixelGuildMember
 */
export type HypixelGuildMember = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Rank
     */
    rank: string;
    /**
     * Joined
     */
    joined: string;
};

/**
 * HypixelGuildMemberFull
 */
export type HypixelGuildMemberFull = {
    /**
     * Username
     */
    username: string;
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Rank
     */
    rank: string;
    /**
     * Joined
     */
    joined: string;
    /**
     * Skin Showcase B64
     */
    skin_showcase_b64: string;
};

/**
 * HypixelPlayer
 */
export type HypixelPlayer = {
    /**
     * Source
     */
    source: string;
    /**
     * Uuid
     */
    uuid: string;
    /**
     * First Login
     */
    first_login: string | null;
    /**
     * Last Login
     */
    last_login: string | null;
    /**
     * Rank
     */
    rank: string | null;
    /**
     * Achievement Points
     */
    achievement_points: number;
    /**
     * Network Experience
     */
    network_experience: number;
    /**
     * Network Level
     */
    network_level: number;
    /**
     * Karma
     */
    karma: number;
    bedwars: BedwarsProfile;
};

/**
 * MCCIFriend
 */
export type McciFriend = {
    /**
     * Username
     */
    username: string;
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Rank
     */
    rank: string | null;
};

/**
 * MCCIPlayer
 */
export type McciPlayer = {
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Username
     */
    username: string;
    /**
     * Rank
     */
    rank: string | null;
    /**
     * Online
     */
    online: boolean;
    /**
     * First Join
     */
    first_join: string | null;
    /**
     * Last Join
     */
    last_join: string | null;
    /**
     * Friends
     */
    friends: Array<McciFriend>;
    stats: McciStats | null;
    /**
     * Plus Subscribed
     */
    plus_subscribed: boolean;
};

/**
 * MCCIStats
 */
export type McciStats = {
    /**
     * Coins
     */
    coins: number | null;
    /**
     * Royal Reputation
     */
    royal_reputation: number | null;
    /**
     * Anglr Token
     */
    anglr_token: number | null;
    /**
     * Trophies
     */
    trophies: number | null;
    /**
     * Max Trophies
     */
    max_trophies: number | null;
    /**
     * Level
     */
    level: number | null;
    /**
     * Level Evolution
     */
    level_evolution: number | null;
};

/**
 * MojangData
 */
export type MojangData = {
    /**
     * Source
     */
    source: string;
    /**
     * Username
     */
    username: string;
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Has Cape
     */
    has_cape: boolean;
    /**
     * Cape Name
     */
    cape_name: string | null;
    /**
     * Skin Url
     */
    skin_url: string;
    /**
     * Cape Url
     */
    cape_url: string | null;
    /**
     * Skin Showcase B64
     */
    skin_showcase_b64: string;
    /**
     * Cape Front B64
     */
    cape_front_b64: string | null;
    /**
     * Cape Back B64
     */
    cape_back_b64: string | null;
};

/**
 * PlayerRestrictions
 */
export type PlayerRestrictions = {
    /**
     * Main Access
     */
    main_access: boolean;
    /**
     * Character Data Access
     */
    character_data_access: boolean;
    /**
     * Character Build Access
     */
    character_build_access: boolean;
    /**
     * Online Status
     */
    online_status: boolean;
};

/**
 * PlayerStats
 */
export type PlayerStats = {
    /**
     * Wars
     */
    wars: number;
    /**
     * Mobs Killed
     */
    mobs_killed: number;
    /**
     * Chests Opened
     */
    chests_opened: number;
    /**
     * Dungeons Completed
     */
    dungeons_completed: number;
    /**
     * Raids Completed
     */
    raids_completed: number;
    /**
     * Playtime Hours
     */
    playtime_hours: number;
};

/**
 * PlayerSummary
 */
export type PlayerSummary = {
    /**
     * Username
     */
    username: string;
    /**
     * Uuid
     */
    uuid: string;
    /**
     * Online
     */
    online: boolean;
    /**
     * Rank
     */
    rank: string;
    /**
     * Rank Badge
     */
    rank_badge: string | null;
    /**
     * First Login
     */
    first_login: string | null;
    /**
     * Last Login
     */
    last_login: string | null;
    /**
     * Guild Name
     */
    guild_name: string | null;
    /**
     * Guild Prefix
     */
    guild_prefix: string | null;
    player_stats: PlayerStats | null;
    /**
     * Characters
     */
    characters: Array<CharacterInfo>;
    restrictions: PlayerRestrictions;
};

/**
 * ProfessionInfo
 */
export type ProfessionInfo = {
    /**
     * Fishing
     */
    fishing: number;
    /**
     * Woodcutting
     */
    woodcutting: number;
    /**
     * Mining
     */
    mining: number;
    /**
     * Farming
     */
    farming: number;
    /**
     * Scribing
     */
    scribing: number;
    /**
     * Jeweling
     */
    jeweling: number;
    /**
     * Alchemism
     */
    alchemism: number;
    /**
     * Cooking
     */
    cooking: number;
    /**
     * Weaponsmithing
     */
    weaponsmithing: number;
    /**
     * Tailoring
     */
    tailoring: number;
    /**
     * Woodworking
     */
    woodworking: number;
    /**
     * Armouring
     */
    armouring: number;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type RootGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/';
};

export type RootGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetProfileV1PlayersMojangUsernameGetData = {
    body?: never;
    path: {
        /**
         * Username
         */
        username: unknown;
    };
    query?: never;
    url: '/v1/players/mojang/{username}';
};

export type GetProfileV1PlayersMojangUsernameGetErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
    /**
     * Upstream Error
     */
    502: ErrorResponse;
    /**
     * Upstream Timeout Error
     */
    504: ErrorResponse;
};

export type GetProfileV1PlayersMojangUsernameGetError = GetProfileV1PlayersMojangUsernameGetErrors[keyof GetProfileV1PlayersMojangUsernameGetErrors];

export type GetProfileV1PlayersMojangUsernameGetResponses = {
    /**
     * Successful Response
     */
    200: MojangData;
};

export type GetProfileV1PlayersMojangUsernameGetResponse = GetProfileV1PlayersMojangUsernameGetResponses[keyof GetProfileV1PlayersMojangUsernameGetResponses];

export type GetHypixelV1PlayersHypixelUuidGetData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: unknown;
    };
    query?: never;
    url: '/v1/players/hypixel/{uuid}';
};

export type GetHypixelV1PlayersHypixelUuidGetErrors = {
    /**
     * Bad Request
     */
    400: ErrorResponse;
    /**
     * Not Found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
    /**
     * Internal Server Error
     */
    500: ErrorResponse;
    /**
     * Upstream Error
     */
    502: ErrorResponse;
    /**
     * Upstream Timeout Error
     */
    504: ErrorResponse;
};

export type GetHypixelV1PlayersHypixelUuidGetError = GetHypixelV1PlayersHypixelUuidGetErrors[keyof GetHypixelV1PlayersHypixelUuidGetErrors];

export type GetHypixelV1PlayersHypixelUuidGetResponses = {
    /**
     * Successful Response
     */
    200: HypixelFullData;
};

export type GetHypixelV1PlayersHypixelUuidGetResponse = GetHypixelV1PlayersHypixelUuidGetResponses[keyof GetHypixelV1PlayersHypixelUuidGetResponses];

export type GetGuildV1HypixelGuildsIdGetData = {
    body?: never;
    path: {
        /**
         * Id
         */
        id: unknown;
    };
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/v1/hypixel/guilds/{id}';
};

export type GetGuildV1HypixelGuildsIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetGuildV1HypixelGuildsIdGetError = GetGuildV1HypixelGuildsIdGetErrors[keyof GetGuildV1HypixelGuildsIdGetErrors];

export type GetGuildV1HypixelGuildsIdGetResponses = {
    /**
     * Response Get Guild V1 Hypixel Guilds  Id  Get
     * Successful Response
     */
    200: Array<HypixelGuildMemberFull>;
};

export type GetGuildV1HypixelGuildsIdGetResponse = GetGuildV1HypixelGuildsIdGetResponses[keyof GetGuildV1HypixelGuildsIdGetResponses];

export type GetStatusV1PlayersStatusUuidGetData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: unknown;
    };
    query?: never;
    url: '/v1/players/status/{uuid}';
};

export type GetStatusV1PlayersStatusUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetStatusV1PlayersStatusUuidGetError = GetStatusV1PlayersStatusUuidGetErrors[keyof GetStatusV1PlayersStatusUuidGetErrors];

export type GetStatusV1PlayersStatusUuidGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetWynncraftV1PlayersWynncraftUuidGetData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: string;
    };
    query?: never;
    url: '/v1/players/wynncraft/{uuid}';
};

export type GetWynncraftV1PlayersWynncraftUuidGetErrors = {
    /**
     * Not found
     */
    404: ErrorResponse;
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetWynncraftV1PlayersWynncraftUuidGetError = GetWynncraftV1PlayersWynncraftUuidGetErrors[keyof GetWynncraftV1PlayersWynncraftUuidGetErrors];

export type GetWynncraftV1PlayersWynncraftUuidGetResponses = {
    /**
     * Successful Response
     */
    200: PlayerSummary;
};

export type GetWynncraftV1PlayersWynncraftUuidGetResponse = GetWynncraftV1PlayersWynncraftUuidGetResponses[keyof GetWynncraftV1PlayersWynncraftUuidGetResponses];

export type GetWynncraftGuildV1WynncraftGuildsPrefixGetData = {
    body?: never;
    path: {
        /**
         * Prefix
         */
        prefix: unknown;
    };
    query?: never;
    url: '/v1/wynncraft/guilds/{prefix}';
};

export type GetWynncraftGuildV1WynncraftGuildsPrefixGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetWynncraftGuildV1WynncraftGuildsPrefixGetError = GetWynncraftGuildV1WynncraftGuildsPrefixGetErrors[keyof GetWynncraftGuildV1WynncraftGuildsPrefixGetErrors];

export type GetWynncraftGuildV1WynncraftGuildsPrefixGetResponses = {
    /**
     * Successful Response
     */
    200: GuildInfo;
};

export type GetWynncraftGuildV1WynncraftGuildsPrefixGetResponse = GetWynncraftGuildV1WynncraftGuildsPrefixGetResponses[keyof GetWynncraftGuildV1WynncraftGuildsPrefixGetResponses];

export type GetWynncraftGuildListV1WynncraftGuildListGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/wynncraft/guild-list';
};

export type GetWynncraftGuildListV1WynncraftGuildListGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetDonutV1PlayersDonutsmpUsernameGetData = {
    body?: never;
    path: {
        /**
         * Username
         */
        username: unknown;
    };
    query?: never;
    url: '/v1/players/donutsmp/{username}';
};

export type GetDonutV1PlayersDonutsmpUsernameGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDonutV1PlayersDonutsmpUsernameGetError = GetDonutV1PlayersDonutsmpUsernameGetErrors[keyof GetDonutV1PlayersDonutsmpUsernameGetErrors];

export type GetDonutV1PlayersDonutsmpUsernameGetResponses = {
    /**
     * Successful Response
     */
    200: DonutPlayerStats;
};

export type GetDonutV1PlayersDonutsmpUsernameGetResponse = GetDonutV1PlayersDonutsmpUsernameGetResponses[keyof GetDonutV1PlayersDonutsmpUsernameGetResponses];

export type GetMccIslandV1PlayersMccislandUuidGetData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: unknown;
    };
    query?: never;
    url: '/v1/players/mccisland/{uuid}';
};

export type GetMccIslandV1PlayersMccislandUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMccIslandV1PlayersMccislandUuidGetError = GetMccIslandV1PlayersMccislandUuidGetErrors[keyof GetMccIslandV1PlayersMccislandUuidGetErrors];

export type GetMccIslandV1PlayersMccislandUuidGetResponses = {
    /**
     * Successful Response
     */
    200: McciPlayer;
};

export type GetMccIslandV1PlayersMccislandUuidGetResponse = GetMccIslandV1PlayersMccislandUuidGetResponses[keyof GetMccIslandV1PlayersMccislandUuidGetResponses];

export type GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetData = {
    body?: never;
    path: {
        /**
         * Metric Key
         */
        metric_key: string;
        /**
         * Player Uuid
         */
        player_uuid: string;
    };
    query?: never;
    url: '/v1/metrics/{metric_key}/distribution/{player_uuid}';
};

export type GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetError = GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetErrors[keyof GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetErrors];

export type GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetResponses = {
    /**
     * Successful Response
     */
    200: HistogramData;
};

export type GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetResponse = GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetResponses[keyof GetMetricV1MetricsMetricKeyDistributionPlayerUuidGetResponses];

export type TrackPlayerV1TrackerUuidStatusGetData = {
    body?: never;
    path: {
        /**
         * Uuid
         */
        uuid: string;
    };
    query?: never;
    url: '/v1/tracker/{uuid}/status';
};

export type TrackPlayerV1TrackerUuidStatusGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type TrackPlayerV1TrackerUuidStatusGetError = TrackPlayerV1TrackerUuidStatusGetErrors[keyof TrackPlayerV1TrackerUuidStatusGetErrors];

export type TrackPlayerV1TrackerUuidStatusGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8000' | (string & {});
};
